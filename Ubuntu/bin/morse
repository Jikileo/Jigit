#!/bin/bash
############### TAP TIN DUOC TAO BOI JIKILEO ###############
#-----------------------   Jiki   -------------------------#
#
# Name script: Morse
# Author:		Jikileo
# Version:	2.1
# Email:		micae_vu@yahoo.com
# Description: Chương trình chuyển dịch mã morse
#---------------------   Ket Thuc  ------------------------#
#
##### START #####

# Kiem tra shell
set -e

# Thêm các biến màu sắc
# Colors
BLUE='\e[38;5;105m'
BROWN='\e[38;5;100m'
GREEN='\e[38;5;119m'
NORMAL='\e[0m'
RED="\e[38;5;197m"
YELLOW='\e[38;5;190m'

decode_char(){
    declare -A letter
    letter[.-]="A";
    letter[-...]="B";
    letter[-.-.]="C";
    letter[-..]="D";
    letter[.]="E";
    letter[..-.]="F";
    letter[--.]="G";
    letter[....]="H";
    letter[..]="I";
    letter[.---]="J";
    letter[-.-]="K";
    letter[.-..]="L";
    letter[--]="M";
    letter[-.]="N";
    letter[---]="O";
    letter[.--.]="P";
    letter[--.-]="Q";
    letter[.-.]="R";
    letter[...]="S";
    letter[-]="T";
    letter[..-]="U";
    letter[...-]="V";
    letter[.--]="W";
    letter[-..-]="X";
    letter[-.--]="Y";
    letter[--..]="Z";
    letter[-----]="0";
    letter[.----]="1";
    letter[..---]="2";
    letter[...--]="3";
    letter[....-]="4";
    letter[.....]="5";
    letter[-....]="6";
    letter[--...]="7";
    letter[---..]="8";
    letter[----.]="9";
    letter[.-.-.-]=".";
    letter[--..--]=",";
    letter[..--..]="?";
    letter[-.-.--]="!";
    letter[-..-.]="/";
    letter[---...]=":";
    letter[-.-.-.]=";";
    letter[-...-]="=";
    letter[.-.-.]="+";
    letter[..--.-]="_";
    letter[.--.-.]="@";
    letter[-....-]="-";
    letter[/]=" ";

    letter[space]=" ";
    
    echo -ne "${letter[${1}]}"
    
}

str="a b c d e f g h i j k l m n o p q r s t u v w x y z 1 2 3 4 5 6 7 8 9 0 \. \, \! \? \/ \: \; \= \+ \_ \@ \-"
giaima=($str)
str=".- -... -.-. -.. . ..-. --. .... .. .--- -.- .-.. -- -. --- .--. --.- .-. ... - ..- ...- .-- -..- -.-- --.. .---- ..--- ...-- ....- ..... -..... --... ---.. ----. ----- .-.-.- --..-- -.-.-- ..--.. -..-. ---... -.-.-. -...- .-.-. ..--.- .--.-. -....-"
mahoa=($str)

# KEY-AI
KEY_AI="jdsahfjajsr892443trj0kdkw^&@23fskdsjfkhdsfjdsj!k:hjfhskdnxcn;sahjgwafdjsfkds;ywiuehfmdnfzdsfdf;shdfajkdfueiwhfjdkfkds;kfdhsbvncmxzisdhfjkdsaf;!i:gsajkthgrehgk;vbjerfjahjfhdsljkvcxv;ahgjirewgjnjklnvk;kdsjgkyewiugknvsg;dksajlfkdkaghjkfdbvmcxnmb;keutirejgkfdg;x;fdkljsafdsakd^kjfakj;askldjfkldjf*skfadsfoegfkdlnf,zm;lvkd(ssakjdlsajkldfksfj)dsjkljfdklsjfkdsjf;k@jsfkldafjsakljfkdl;jk!jklajskfljfdkjl;afdskjadfkl!safnkedjgretk%hjdsahgeriojgkdsnf&dsfjklahfjksadkf*ksjfkjlfgkhsjkfhgjkds~ksajfkhgjkfdjg!klfjasfpoakgdlsfdjkl<kajfkldjfkjlhgfndg<sjkhgjkfd!y:tblnaejtrkkuwojo;bdsjhfghjdsgjfgsajfghds!u:hsuifghdjhsdjkzhfj;jkfdsgjkhafjakwfdgs;&^*^!jfdsjgkfhjgskdnmdsafdjhlksdafjd;sshdjktgerfgdgs;sjkdhfjkdsklfljkf;tureitkgf,djgksdfdsfaf'ds;af\./ur2897489506sldfksfd,/dslp[fw5934o23lgsoiug90rfkldsdjfogskf;'f32klgv,cnbgeotw95084rkewlfds-04gfdgrylr;'sfewtp0u453pk;lsd'g0-932t/sd.f'w;lr;w're;35usefjaoidr930rsejfkdt8943ufd;;43985;fdsfsdf;gwityiuewfjkdshfiuew!h:mvpuuywarqjgarlj;fehwirtjdjfkdsjafoe;irewytfdjsnkfeiwrje;ietfghdjkfwihfkjdsf;riuewyfdsjkfhjskafdjkfjwer93;43kldjfgoet0943dkosufdsg.estghkdsjgkdg,ertfjkdjsferitmiatiroet/ewrgosdjgiruyteirutre]treutireutioegkdsg[sdgkjrgioergjre;greogjioregjre65lskfelrjte!lefewotdsngjyiu@jkldjfksdfewtret;dsfajhksajjkfehjre/rejtgfdojgvkjgkdljfgkdtiroeiotureifbw;eowrutniregisyd;osaogareniognifs;ouniaurieuifrui4eturgi;it903togimopsig;wurnioewfuidsg;guniewguibufdsaf;wqingeiqgnifdsfd;!o:nghtzfssmuuwbmbz;akdiewquriewrewf;wrefniewuyrgbuid;afniweriufbsauf;ewiouifesabfidf;gnsaigbiugfdsgbui;sinufiewuifn;sonfudgbirueng;saoirawjfmds;misafndsfdsmaf;!s:sdjfnadfb;gkanifuifdsafd;fdsafdsffe;sdfavjkvj;fdsniongi;aonsufdibf;oangifvsdifsafd;dsaifodsnfoisafunid;pdapifmodisofapiopsaifo;bmfdsgndiugfdgfds"
# HƯỚNG DẪN SỬ DỤNG
USAGE="
${BROWN}Usage${NORMAL}: morse [Option] [File|String]
Shell script này dùng để encode va decode mã morse với chuỗi và tập tin:

  ${GREEN}1${NORMAL}) Biên dịch chuỗi, tập tin
  ${GREEN}2${NORMAL}) Tạo tập tin dientin.wav . Gửi tập tin dientin.wav
  ${GREEN}3${NORMAL}) Đọc Viết Xóa Gửi email bằng mã morse !!!

${BROWN}Options${NORMAL}:
Bao gồm 4 loại:
                                    Dịch chuỗi kí tự / Dịch chuỗi mã morse / Dịch văn bản / Dịch tập tin morse
  [yahoo/hotmail/outlook/gmail]     Đọc email từ hộp thư Yahoo !!! Hotmail !!! Outlook !!! Gmail !!!
  [-wy/-wh/-wo/-wg]                 Viết email Yahoo !!! Hotmail !!! Outlook !!! Gmail !!!
  [-dy/-dh/-do/-dg]                 Xóa email từ hộp thư Yahoo !!! Hotmail !!! Outlook !!! Gmail !!!

"
HELP="
${BROWN}Usage Examples${NORMAL}:
  Dịch đoạn văn bản input
  \$ ${BLUE}morse Hello Jiki${NORMAL}

  Dịch morse code
  \$ ${BLUE}morse .... . .-.. .-.. --- / .--- .. -.- ..${NORMAL}

  Dùng lệnh cat và chuyển dịch sang mã morse
  \$ ${BLUE}cat example.txt | morse${NORMAL}

  Dịch văn bản tập tin thành mã morse
  \$ ${BLUE}morse example.txt${NORMAL}

  Chuyển dịch từ tập tin chứa mã morse sang văn bản thường
  \$ ${BLUE}morse code-morse.txt${NORMAL}

  Đọc email Yahoo !!! Hotmail !!! Outlook !!! Gmail !!!
  \$ ${BLUE}morse [Options mail]${NORMAL}

  Viết email Yahoo !!! Hotmail !!! Outlook !!! Gmail !!!
  \$ ${BLUE}morse [Options -wy/-wh/-wo/-wg]${NORMAL}

  Xóa email Yahoo !!! Hotmail !!! Outlook !!! Gmail !!!
  \$ ${BLUE}morse [Options -dy/-dh/-do/-dg]${NORMAL}

  Phiên bản tiếp theo mình sẽ nâng cấp các options khác ...
"

function morse_code() {
  line="$@"
  for (( i=0; i<${#line}; i++ ))
  do
    char="${line:$i:1}"
    j=0
    char=$(echo "$char" | tr 'A-Z' 'a-z')
    flag="0"
    while [[ $j -lt ${#giaima[@]} ]]
    do
      if [[ $char == ${giaima[$j]} ]]
      then
        echo -n "${mahoa[$j]} "
        flag="1"
      fi
      j=$(( $j + 1 ))
    done
    if [[ $char == " " ]]
    then
      echo -ne "/ "
      flag="1"
    elif [[ $char == "\\" ]]
    then
      echo -ne "/ "
      i=$(($i + 1))
      flag="1"
    fi
    if [[ ! -z $char && $flag == "0" ]]
    then
      echo -n "#"
    fi
  done
  echo 
}

function decode_morse() {
  local morse_string="$@"
  local morse_chars=($morse_string)

  for morse_char in "${morse_chars[@]}"
  do
    decode_char "$morse_char"
  done
  echo
}

bit_rate="8000"

function dien_tin() {
  ffmpeg -f lavfi -i "sine=frequency=1000:duration=0.1" dot.wav -loglevel error
  ffmpeg -f lavfi -i "sine=frequency=1000:duration=0.3" dash.wav -loglevel error
  ffmpeg -f lavfi -i "sine=frequency=0:duration=0.1" pause.wav -loglevel error
  ffmpeg -f lavfi -i "sine=frequency=0:duration=0.3" slash.wav -loglevel error
  ffmpeg -f lavfi -i "sine=frequency=0:duration=1" start.wav -loglevel error
  cat /dev/null > sounds
  echo "file 'start.wav'" >> sounds
  line=$alphabet
  for (( i=0; i<${#line}; i++ ))
  do
    char="${line:$i:1}"
    if [[ $char == "." ]]
    then
      echo "file 'dot.wav'" >> sounds
      echo "file 'pause.wav'" >> sounds
    elif [[ $char == "-" ]]
    then
      echo "file 'dash.wav'" >> sounds
      echo "file 'pause.wav'" >> sounds
    elif [[ $char == "/" ]]
    then
      echo "file 'slash.wav'" >> sounds
      echo "file 'pause.wav'" >> sounds
    else
      echo "file 'pause.wav'" >> sounds
    fi
  done
  rm -f dt.wav
  ffmpeg -f concat -safe 0 -i sounds -c copy dt.wav -loglevel error
  rm -f dot.wav dash.wav slash.wav pause.wav start.wav sounds
  ffmpeg -i "dt.wav" -ar "$bit_rate" "dientin.wav" -loglevel error
  rm -f dt.wav
}

morse() {
  local input="$1"

  if [ -f "$input" ]
  then
    content=$(cat "$input")
    if [[ "$content" == *"."* && "$content" == *"-"* ]]
    then
      decode_morse "$content"
    else
      morse_code "$content"
    fi
  else
    content="$input"
    if [[ "$content" == *"."* && "$content" == *"-"* ]]
    then
      decode_morse "$content"
    else
      morse_code "$content"
    fi
  fi

}

# Nhap IMAP server
yahoo_server="imap.mail.yahoo.com"
hotmail_outlook_server="outlook.office365.com"
gmail_server="imap.gmail.com"

# Nhap SMTP sever
yahoo_smtp_server="smtp.mail.yahoo.com"
hotmail_outlook_smtp_server="smtp.office365.com"
gmail_smtp_server="smtp.gmail.com"

temp_files=$(mktemp)
TEMP_FILES=$(mktemp)

# Tao Menu tro giup
argument=""

# Ham nhap khau an toan
read_password() {
    read -p "Nhập username email : " username
    emails="$username$add_email_suffix"
    prompt="Nhập mật khẩu $emails : "
    while IFS= read -p "$prompt" -r -s -n 1 char; do
        if [[ $char == $'\0' ]]; then
            break
        fi
        prompt='*'
        passwords+="$char"
        run="runner"
    done
    echo
}

# Menu trợ giúp
for arg in "$@"
do
  if [ "$arg" = "-wy" ] || [ "$arg" = "--write-yahoo" ]
  then
    add_email_suffix="@yahoo.com"
    read -p "Nhập email nhận thư : " to_emails
    read -p "Nhập nội dung : " body_email
    read -p "Nhập nội dung điện tín : " dientin_morse
    morse_result=$(morse_code "$body_email")
    echo -e "$morse_result" > $temp_files
    email_morse=$(cat "$temp_files")
    alphabet=$(morse_code "$dientin_morse")
    dien_tin
    #mv dientin.wav $TEMP_FILES
    attachment_files="dientin.wav"
    read_password
  elif [ "$arg" = "-wh" ] || [ "$arg" = "--write-hotmail" ]
  then
    add_email_suffix="@hotmail.com"
    read -p "Nhập email nhận thư : " to_emails
    read -p "Nhập nội dung : " body_email
    read -p "Nhập nội dung điện tín : " dientin_morse
    morse_result=$(morse_code "$body_email")
    echo -e "$morse_result" > $temp_files
    email_morse=$(cat "$temp_files")
    alphabet=$(morse_code "$dientin_morse")
    dien_tin
    #mv dientin.wav $TEMP_FILES
    attachment_files="dientin.wav"
    read_password
  elif [ "$arg" = "-wo" ] || [ "$arg" = "--write-outlook" ]
  then
    add_email_suffix="@outlook.com"
    read -p "Nhập email nhận thư : " to_emails
    read -p "Nhập nội dung : " body_email
    read -p "Nhập nội dung điện tín : " dientin_morse
    morse_result=$(morse_code "$body_email")
    echo -e "$morse_result" > $temp_files
    email_morse=$(cat "$temp_files")
    alphabet=$(morse_code "$dientin_morse")
    dien_tin
    #mv dientin.wav $TEMP_FILES
    attachment_files="dientin.wav"
    read_password
  elif [ "$arg" = "-wg" ] || [ "$arg" = "--write-gmail" ]
  then
    add_email_suffix="@gmail.com"
    read -p "Nhập email nhận thư : " to_emails
    read -p "Nhập nội dung : " body_email
    read -p "Nhập nội dung điện tín : " dientin_morse
    morse_result=$(morse_code "$body_email")
    echo -e "$morse_result" > $temp_files
    email_morse=$(cat "$temp_files")
    alphabet=$(morse_code "$dientin_morse")
    dien_tin
    #mv dientin.wav $TEMP_FILES
    attachment_files="dientin.wav"
    read_password
  elif [ "$arg" = "yahoo" ] || [ "$arg" = "--yahoo" ] || [ "$arg" = "-dy" ] || [ "$arg" = "--delete-yahoo" ]
  then
    add_email_suffix="@yahoo.com"
    if [ -d /home/$USER/email_morse ]
    then
      echo "Thư mục đã tồn tại."
    else
      # Tạo thư mục nếu nó chưa tồn tại
      mkdir -p /home/$USER/email_morse
      echo "Đã tạo thư mục."
    fi
    download_attachments=/home/$USER/email_morse
    read_password
  elif [ "$arg" = "hotmail" ] || [ "$arg" = "--hotmail" ] || [ "$arg" = "-dh" ] || [ "$arg" = "--delete-hotmail" ]
  then
    add_email_suffix="@hotmail.com"
    if [ -d /home/$USER/email_morse ]
    then
      echo "Thư mục đã tồn tại."
    else
      # Tạo thư mục nếu nó chưa tồn tại
      mkdir -p /home/$USER/email_morse
      echo "Đã tạo thư mục."
    fi
    download_attachments=/home/$USER/email_morse
    read_password
  elif [ "$arg" = "outlook" ] || [ "$arg" = "--outlook" ] || [ "$arg" = "-do" ] || [ "$arg" = "--delete-outlook" ]
  then
    add_email_suffix="@outlook.com"
    if [ -d /home/$USER/email_morse ]
    then
      echo "Thư mục đã tồn tại."
    else
      # Tạo thư mục nếu nó chưa tồn tại
      mkdir -p /home/$USER/email_morse
      echo "Đã tạo thư mục."
    fi
    download_attachments=/home/$USER/email_morse
    read_password
  elif [ "$arg" = "gmail" ] || [ "$arg" = "--gmail" ] || [ "$arg" = "-dg" ] || [ "$arg" = "--delete-gmail" ]
  then
    add_email_suffix="@gmail.com"
    if [ -d /home/$USER/email_morse ]
    then
      echo "Thư mục đã tồn tại."
    else
      # Tạo thư mục nếu nó chưa tồn tại
      mkdir -p /home/$USER/email_morse
      echo "Đã tạo thư mục."
    fi
    download_attachments=/home/$USER/email_morse
    read_password
  elif [ "$arg" = "-k" ] || [ "$arg" = "--key" ]
  then
    echo "============================== KEY-AI BEGIN =============================="
    echo -e "$KEY_AI"
    echo "============================== KEY-AI END =============================="
    exit 1
  fi
done


# Script Python để đọc email từ tài khoản Yahoo Hotmail Outlook Gmail
python_read=$(cat <<EOF
import imaplib
import email
from email.header import decode_header
import os

class Color:
    """Define ANSI escape codes for colors."""
    RED = '\033[38;5;160m'
    GREEN = '\033[38;5;82m'
    YELLOW = '\033[38;5;226m'
    BLUE = '\033[38;5;93m'
    MAGENTA = '\033[38;5;165m'
    CYAN = '\033[38;5;208m'
    RESET = '\033[0m'

def print_colored_text(text, color):
    """Print colored text to the terminal."""
    print(f"{color}{text}{Color.RESET}")

# Thư mục để lưu trữ tệp đính kèm
download_folder = "$download_attachments"
os.makedirs(download_folder, exist_ok=True)

# Kết nối đến dịch vụ IMAP
try:
  mail = imaplib.IMAP4_SSL("runner", port=993, ssl_context=None, timeout=None)
  mail.login("$emails", "$passwords")
  print_colored_text("\nĐăng nhập thành công !!!", Color.GREEN)
except imaplib.IMAP4.error as e:
  print_colored_text(f"\nLỗi xảy ra: {str(e)}", Color.RED)
  exit()

# Chọn hộp thư "inbox"
mail.select("inbox")

# Tìm tất cả các email trong hộp thư
status, messages = mail.search(None, "ALL")
messages = messages[0].split()

# In tổng số lượng thư
total_emails = len(messages)
print_colored_text(f"\nSố email trong hộp thư là : {total_emails}\n", Color.YELLOW)

# Lấy nội dung của 5 email đầu tiên
for i in range(min(5, len(messages))):
    _, msg_data = mail.fetch(messages[i], "(RFC822)")
    for response_part in msg_data:
        if isinstance(response_part, tuple):
            email_message = email.message_from_bytes(response_part[1])
            subject, encoding = decode_header(email_message["Subject"])[0]
            if isinstance(subject, bytes):
                subject = subject.decode(encoding or "utf-8")
            print_colored_text(f"Subject: {subject}", Color.YELLOW)
            print(f"From: {email_message.get('From')}")
            print(f"Date: {email_message.get('Date')}")
            print_colored_text("Body:", Color.YELLOW)
            for part in email_message.walk():
                if part.get_content_type() == "text/plain":
                    print(part.get_payload(decode=True).decode("utf-8"))
            print("=" * 50)

for mail_id in messages:
    # Lấy thông tin về email
    _, msg_data = mail.fetch(mail_id, "(RFC822)")
    msg = email.message_from_bytes(msg_data[0][1])

    # Lặp qua các phần của email
    for part in msg.walk():
        # Kiểm tra nếu là phần đính kèm
        if part.get("Content-Disposition") is not None:
            filename = part.get_filename()

            # Kiểm tra xem tệp có tên không chứa dấu gạch chéo ("@") để đảm bảo không phải là email
            if filename and "@" not in filename:
                print(f"Tìm thấy đính kèm: {filename}")

                # Tạo đường dẫn lưu trữ tệp đính kèm
                filepath = os.path.join(download_folder, filename)

                # Lưu tệp đính kèm
                with open(filepath, "wb") as f:
                    f.write(part.get_payload(decode=True))
                print(f"Tải về tệp đính kèm: {filepath}")
            else:
                print("Không có tập tin đính kèm")

# Đóng kết nối
mail.logout()
EOF
)

python_write=$(cat <<EOF
import smtplib
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart
from email import encoders
from email.mime.application import MIMEApplication

class Color:
    """Define ANSI escape codes for colors."""
    RED = '\033[38;5;160m'
    GREEN = '\033[38;5;82m'
    YELLOW = '\033[38;5;226m'
    BLUE = '\033[38;5;93m'
    MAGENTA = '\033[38;5;165m'
    CYAN = '\033[38;5;208m'
    RESET = '\033[0m'

def print_colored_text(text, color):
    """Print colored text to the terminal."""
    print(f"{color}{text}{Color.RESET}")

def send_email():
    # Cấu hình
    SMTP_SERVER = "runner"
    SMTP_PORT = 587
    TO_EMAIL = "$to_emails"
    FROM_EMAIL = "$emails"
    SUBJECT = "Dear Friend !!!"
    BODY= "$email_morse"

    # Tạo đối tượng MIMEMultipart
    message = MIMEMultipart()
    message['From'] = FROM_EMAIL
    message['To'] = TO_EMAIL
    message['Subject'] = SUBJECT

    # Thêm nội dung vào email
    message.attach(MIMEText(BODY, 'plain'))
    
    # Attach file
    attachment_file = "$attachment_files"
    if attachment_file:
      try:
        with open(attachment_file, "rb") as attachment:
        #attachment = open(attachment_file, "rb")
          part = MIMEBase('application', 'octet-stream')
          part.set_payload((attachment).read())
          encoders.encode_base64(part)
          part.add_header('Content-Disposition', "attachment; filename= %s" % attachment_file)
          message.attach(part)
      except FileNotFoundError:
        print_colored_text("Không tìm thấy tệp đính kèm.", Color.RED)
        return

    # Kết nối đến máy chủ SMTP qua SSL/TLS
    try:
      with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
        server.starttls()
            
        # Đăng nhập vào tài khoản email
        server.login("$emails", "$passwords")

        # Gửi email
        server.sendmail(FROM_EMAIL, TO_EMAIL, message.as_string())
    
      print_colored_text("\nGửi Email thành công !!!\n", Color.YELLOW)
    except smtplib.SMTPAuthenticationError:
      print_colored_text("\nLỗi đăng nhập ... Username hoặc password sai !!!", Color.RED)
    except Exception as e:
      print_colored_text(f"\nLỗi xảy ra: {str(e)}", Color.RED)

if __name__ == "__main__":
    send_email()
EOF
)

python_delete=$(cat <<EOF
import imaplib
import email
from email.header import decode_header

class Color:
    """Define ANSI escape codes for colors."""
    RED = '\033[38;5;160m'
    GREEN = '\033[38;5;82m'
    YELLOW = '\033[38;5;226m'
    BLUE = '\033[38;5;93m'
    MAGENTA = '\033[38;5;165m'
    CYAN = '\033[38;5;208m'
    RESET = '\033[0m'

def print_colored_text(text, color):
    """Print colored text to the terminal."""
    print(f"{color}{text}{Color.RESET}")

# Thông tin tài khoản Yahoo
username = "$emails"
password = "$passwords"

# Kết nối đến máy chủ IMAP của Yahoo
mail = imaplib.IMAP4_SSL("runner")

# Đăng nhập vào tài khoản
mail.login(username, password)

# Chọn hộp thư
mail.select("inbox")

# Tìm tất cả các email trong hộp thư
status, messages = mail.search(None, "ALL")
messages = messages[0].split()

# Xóa email đầu tiên trong danh sách (thay đổi số để xóa email khác)
if messages:
    result, data = mail.store(messages[0], '+FLAGS', '(\Deleted)')
    mail.expunge()
    print_colored_text("\nXóa Email thành công !!!\n", Color.YELLOW)

# In tổng số lượng thư
total_emails = len(messages)
print_colored_text(f"\nSố email còn lại : {total_emails}\n", Color.YELLOW)

# Đăng xuất
mail.logout()
EOF
)

# Menu cho scrip code
argument=""

for arg in "$@"
do
  if [ "$arg" = "-wy" ] || [ "$arg" = "--write-yahoo" ]
  then
    python_yahoo=$(echo "$python_write" | sed "s/$run/$yahoo_smtp_server/g")
    python3 -c "$python_yahoo"
    rm -rf $temp_files $TEMP_FILES dientin.wav
  elif [ "$arg" = "-wh" ] || [ "$arg" = "--write-hotmail" ] || [ "$arg" = "-wo" ] || [ "$arg" = "--write-outlook" ]
  then
    python_hotmail_outlook=$(echo "$python_write" | sed "s/$run/$hotmail_outlook_smtp_server/g")
    python3 -c "$python_hotmail_outlook"
    rm -rf $temp_files $TEMP_FILES dientin.wav
  elif [ "$arg" = "-wg" ] || [ "$arg" = "--write-gmail" ]
  then
    python_gmail=$(echo "$python_write" | sed "s/$run/$gmail_smtp_server/g")
    python3 -c "$python_gmail"
    rm -rf $temp_files $TEMP_FILES dientin.wav
  elif [ "$arg" = "-dy" ] || [ "$arg" = "--delete-yahoo" ]
  then
    python_yahoo=$(echo "$python_delete" | sed "s/$run/$yahoo_server/g")
    python3 -c "$python_yahoo"
  elif [ "$arg" = "-dh" ] || [ "$arg" = "-do" ] || [ "$arg" = "--delete-hotmail" ] || [ "$arg" = "--delete-outlook" ]
  then
    python_hotmail_outlook=$(echo "$python_delete" | sed "s/$run/$hotmail_outlook_server/g")
    python3 -c "$python_hotmail_outlook"
  elif [ "$arg" = "-dg" ] || [ "$arg" = "--delete-gmail" ]
  then
    python_gmail=$(echo "$python_delete" | sed "s/$run/$gmail_server/g")
    python3 -c "$python_gmail"
  elif [ "$arg" = "yahoo" ] || [ "$arg" = "--yahoo" ]
  then
    python_yahoo=$(echo "$python_read" | sed "s/$run/$yahoo_server/g")
    python3 -c "$python_yahoo"
  elif [ "$arg" = "hotmail" ] || [ "$arg" = "--hotmail" ] || [ "$arg" = "outlook" ] || [ "$arg" = "--outlook" ]
  then
    python_hotmail_outlook=$(echo "$python_read" | sed "s/$run/$hotmail_outlook_server/g")
    python3 -c "$python_hotmail_outlook"
  elif [ "$arg" = "gmail" ] || [ "$arg" = "--gmail" ]
  then
    python_gmail=$(echo "$python_read" | sed "s/$run/$gmail_server/g")
    python3 -c "$python_gmail"
  elif [ "$arg" = "-dt" ]
  then
    MODE="dientin"
    dientin="dien_tin"
    alphabet=$(morse_code "${@:2}")
    dien_tin
  elif [ "$arg" = "-ssh" ]
  then
    alphabet=$(morse_code "${@:2}")
    dien_tin
    if ls *.wav 1> /dev/null 2>&1
    then
      for file in *.wav
      do
        read -p "Nhập IP ADDRESS : " IP_ADDRESS
        MOBILE_HOST="$IP_ADDRESS"
        MOBILE_PORT="22"
        MOBILE_USER="mobile"
        LOCAL_FILE="/var/mobile/$file"
        TEMP_FILE=$(mktemp)
        mv "$file" "$TEMP_FILE"
        scp -P "$MOBILE_PORT" "$TEMP_FILE" "$MOBILE_USER@$MOBILE_HOST:$LOCAL_FILE"
        echo "Đã gửi đến $IP_ADDRESS ... !!!"
        rm -rf "$TEMP_FILE"
      done
    fi
  elif [ "$arg" = "-h" ] || [ "$arg" = "help" ] || [ "$arg" = "--help" ]
  then  
    echo -e "$USAGE$HELP"
    exit 0
  else
    argument="$argument $arg"
  fi
done

if [ -t 0 ]; then
  trimmed_arguments="${argument// }"
  if [ -f "$trimmed_arguments" ]
  then
    while read -re line
    do
      morse "$line"
    done < <(cat "$trimmed_arguments")
  else
    while read -re line
    do
      morse "$line"
    done < <(echo "$argument")
  fi
else
  while IFS= read -re line
  do
    morse "$line"
  done
fi

rm -rf $temp_files $TEMP_FILES

# Kiem tra ffmpeg command
if ! command -v ffmpeg >/dev/null 2>&1
then
  echo -e "${RED}Để sử dụng điện tín vui lòng cài đặt command ffmpeg ... !!!${NORMAL}"
  echo -e "${RED}Trên Ubuntu/Debian : sudo apt-get install ffmpeg${NORMAL}"
  exit 1
fi

# THE END
